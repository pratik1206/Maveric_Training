package com.kuka.Wishlist.controller;

import java.util.List;
import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.kuka.Wishlist.dto.WishListRequest;
import com.kuka.Wishlist.service.IWishListService;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.responses.ApiResponse;

@RestController
@RequestMapping("/wishlist")
public class WishlistController {

    private static final Logger logger = LoggerFactory.getLogger(WishlistController.class);
    @Autowired
    private IWishListService wishListService;


    /**
     *
     * @param wishListRequest
     * @return wishListRequest
     */
    @PostMapping("/add")
    public ResponseEntity<WishListRequest> addItemToWishList(@RequestBody WishListRequest wishListRequest) {
        logger.debug("addItemToWishList {}", wishListRequest);
        return new ResponseEntity<>(wishListService.addItemToWishList(wishListRequest), HttpStatus.valueOf(200));

    }

    /**
     *
     * @param productId
     * @param userId
     * @return responseEntity
     */

    @DeleteMapping("/delete/{productId}/{userId}")
    public ResponseEntity<Object> deleteItemFromWishList(@PathVariable String productId, @PathVariable int userId) {
        try {
            return new ResponseEntity<>(wishListService.deleteItemFromWishList(productId, userId), HttpStatus.OK);
        } catch (Exception e) {
            ResponseEntity responseEntity = new ResponseEntity("Product not found to delete", HttpStatus.BAD_REQUEST);
            return responseEntity;
        }


    }
    
    /**
     * Retrieves all products from the wishlist.
     *
     * @return A list of products in the wishlist.
     */
    @GetMapping("/retrive")
    @Operation( 
			description="Get All Products From WishList",
			summary="This is to Retrive product from wishlist",
			responses= {
			@ApiResponse(
			description = "Valid User",
			responseCode = "201"
			),
			@ApiResponse(
			description = "Unauthorised User",
			responseCode = "401"
			)
			})
    public List<WishListRequest> getWishlistItems() {
        return wishListService.retrieveItemFromWishList();
    }
    
    /**
     * Retrieves a product from the wishlist by its ID.
     *
     * @param userId The ID of the user's wishlist item to retrieve.
     * @return An Optional containing the product if found, or empty if not found.
     */
    
    @GetMapping("/retrive/{userId}")
    @Operation(
            description = "Get a Product From WishList by ID",
            summary = "This is to Retrieve a product from the wishlist by ID",
            responses = {
                    @ApiResponse(
                            description = "Valid User",
                            responseCode = "201"
                    ),
                    @ApiResponse(
                            description = "Unauthorised User",
                            responseCode = "401"
                    )
            })
    public Optional<WishListRequest> getWishlistItemById(@PathVariable int userId) {
        return wishListService.retrieveItemFromWishListByID(userId);
    }
}
